{"ast":null,"code":"import chromium from 'chrome-aws-lambda';\nimport puppeteer from 'puppeteer-core';\nexport default async function handler(req, res) {\n  res.end(req.json());\n\n  try {\n    const isDev = !process.env.AWS_REGION;\n    let options;\n\n    if (isDev) {\n      options = {\n        args: [],\n        executablePath: \"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\n        headless: true,\n        ignoreHTTPSErrors: true\n      };\n    } else {\n      options = {\n        args: chromium.args,\n        executablePath: await chromium.executablePath,\n        headless: true,\n        ignoreHTTPSErrors: true\n      };\n    }\n\n    const browser = await puppeteer.launch(options);\n    let page = await browser.newPage(); // await page.setRequestInterception(true);\n\n    page.on('request', request => {\n      const url = request.url();\n\n      if (request.method() === 'GET' && url.match('api/aluno/curso')) {\n        const {\n          authorization: token = ''\n        } = request.headers();\n        res.send({\n          token\n        });\n      }\n    });\n    await page.goto('https://www.estrategiaconcursos.com.br/');\n    await page.click('.button-header');\n    await page.type('[name=email]', 'wargasteixeira@hotmail.com');\n    await page.type('[name=senha]', 'Wrgs2703!');\n    await page.click('.ui-control [type=submit]');\n    await page.waitForNavigation();\n    await page.waitForNavigation();\n  } catch (error) {\n    console.log(error);\n    res.send(JSON.stringify(error));\n  }\n}","map":{"version":3,"sources":["C:/projetos/estrategia-auth/pages/api/auth.js"],"names":["chromium","puppeteer","handler","req","res","end","json","isDev","process","env","AWS_REGION","options","args","executablePath","headless","ignoreHTTPSErrors","browser","launch","page","newPage","on","request","url","method","match","authorization","token","headers","send","goto","click","type","waitForNavigation","error","console","log","JSON","stringify"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAE5CA,EAAAA,GAAG,CAACC,GAAJ,CAAQF,GAAG,CAACG,IAAJ,EAAR;;AAEA,MAAI;AACA,UAAMC,KAAK,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,UAA3B;AACA,QAAIC,OAAJ;;AAEA,QAAIJ,KAAJ,EAAW;AACPI,MAAAA,OAAO,GAAG;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,cAAc,EAAE,kEAFV;AAGNC,QAAAA,QAAQ,EAAE,IAHJ;AAINC,QAAAA,iBAAiB,EAAE;AAJb,OAAV;AAMH,KAPD,MAOO;AACHJ,MAAAA,OAAO,GAAG;AACNC,QAAAA,IAAI,EAAEZ,QAAQ,CAACY,IADT;AAENC,QAAAA,cAAc,EAAE,MAAMb,QAAQ,CAACa,cAFzB;AAGNC,QAAAA,QAAQ,EAAE,IAHJ;AAINC,QAAAA,iBAAiB,EAAE;AAJb,OAAV;AAMH;;AAED,UAAMC,OAAO,GAAG,MAAMf,SAAS,CAACgB,MAAV,CAAiBN,OAAjB,CAAtB;AAEA,QAAIO,IAAI,GAAG,MAAMF,OAAO,CAACG,OAAR,EAAjB,CAtBA,CAuBA;;AAEAD,IAAAA,IAAI,CAACE,EAAL,CAAQ,SAAR,EAAmBC,OAAO,IAAI;AAC1B,YAAMC,GAAG,GAAGD,OAAO,CAACC,GAAR,EAAZ;;AAEA,UAAGD,OAAO,CAACE,MAAR,OAAqB,KAArB,IAA8BD,GAAG,CAACE,KAAJ,CAAU,iBAAV,CAAjC,EAA+D;AAE3D,cAAM;AAACC,UAAAA,aAAa,EAAEC,KAAK,GAAG;AAAxB,YAA8BL,OAAO,CAACM,OAAR,EAApC;AAEAvB,QAAAA,GAAG,CAACwB,IAAJ,CAAS;AAACF,UAAAA;AAAD,SAAT;AACH;AACJ,KATD;AAWA,UAAMR,IAAI,CAACW,IAAL,CAAU,yCAAV,CAAN;AAEA,UAAMX,IAAI,CAACY,KAAL,CAAW,gBAAX,CAAN;AACA,UAAMZ,IAAI,CAACa,IAAL,CAAU,cAAV,EAA0B,4BAA1B,CAAN;AACA,UAAMb,IAAI,CAACa,IAAL,CAAU,cAAV,EAA0B,WAA1B,CAAN;AAEA,UAAMb,IAAI,CAACY,KAAL,CAAW,2BAAX,CAAN;AAEA,UAAMZ,IAAI,CAACc,iBAAL,EAAN;AAEA,UAAMd,IAAI,CAACc,iBAAL,EAAN;AAEH,GAhDD,CAgDE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA7B,IAAAA,GAAG,CAACwB,IAAJ,CAASQ,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAT;AACH;AAGJ","sourcesContent":["import chromium from 'chrome-aws-lambda';\r\nimport puppeteer from 'puppeteer-core';\r\n\r\nexport default async function handler(req, res) {\r\n\r\n    res.end(req.json())\r\n\r\n    try {\r\n        const isDev = !process.env.AWS_REGION;\r\n        let options;\r\n\r\n        if (isDev) {\r\n            options = {\r\n                args: [],\r\n                executablePath: \"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\r\n                headless: true,\r\n                ignoreHTTPSErrors: true,\r\n            }\r\n        } else {\r\n            options = {\r\n                args: chromium.args,\r\n                executablePath: await chromium.executablePath,\r\n                headless: true,\r\n                ignoreHTTPSErrors: true,\r\n            }\r\n        }\r\n\r\n        const browser = await puppeteer.launch(options);\r\n        \r\n        let page = await browser.newPage();\r\n        // await page.setRequestInterception(true);\r\n\r\n        page.on('request', request => {\r\n            const url = request.url();\r\n\r\n            if(request.method() === 'GET' && url.match('api/aluno/curso')) {\r\n\r\n                const {authorization: token = ''} = request.headers()\r\n\r\n                res.send({token})\r\n            }\r\n        })\r\n\r\n        await page.goto('https://www.estrategiaconcursos.com.br/');\r\n\r\n        await page.click('.button-header');\r\n        await page.type('[name=email]', 'wargasteixeira@hotmail.com')\r\n        await page.type('[name=senha]', 'Wrgs2703!')\r\n\r\n        await page.click('.ui-control [type=submit]')\r\n        \r\n        await page.waitForNavigation();\r\n       \r\n        await page.waitForNavigation();\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        res.send(JSON.stringify(error))\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}