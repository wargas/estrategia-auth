{"ast":null,"code":"import chromium from 'chrome-aws-lambda';\nimport puppeteer from 'puppeteer-core';\nexport default async function handler(req, res) {\n  try {\n    const isDev = !process.env.AWS_REGION;\n    let options;\n\n    if (isDev) {\n      options = {\n        args: [],\n        executablePath: \"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\n        headless: true,\n        ignoreHTTPSErrors: true\n      };\n    } else {\n      options = {\n        args: chromium.args,\n        executablePath: await chromium.executablePath,\n        headless: true,\n        ignoreHTTPSErrors: true\n      };\n    }\n\n    const browser = await puppeteer.launch(options);\n    let page = await browser.newPage(); // await page.setRequestInterception(true);\n\n    page.on('request', request => {\n      const url = request.url();\n\n      if (url.match('api/aluno/curso')) {\n        console.log(request.headers());\n      }\n    });\n    await page.goto('https://www.estrategiaconcursos.com.br/');\n    await page.click('.button-header');\n    await page.type('[name=email]', 'wargasteixeira@hotmail.com');\n    await page.type('[name=senha]', 'Wrgs2703!');\n    await page.click('.ui-control [type=submit]');\n    await page.waitForNavigation(); // await page.screenshot({path: 'screen.png', type: 'png'})\n\n    const dimensions = await page.evaluate(() => {\n      return {\n        width: document.documentElement.clientWidth\n      };\n    });\n    res.send({\n      dimensions\n    });\n  } catch (error) {\n    console.log(error);\n    res.send(JSON.stringify(error));\n  }\n}","map":{"version":3,"sources":["C:/projetos/estrategia-auth/pages/api/auth.js"],"names":["chromium","puppeteer","handler","req","res","isDev","process","env","AWS_REGION","options","args","executablePath","headless","ignoreHTTPSErrors","browser","launch","page","newPage","on","request","url","match","console","log","headers","goto","click","type","waitForNavigation","dimensions","evaluate","width","document","documentElement","clientWidth","send","error","JSON","stringify"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5C,MAAI;AACA,UAAMC,KAAK,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,UAA3B;AACA,QAAIC,OAAJ;;AAEA,QAAIJ,KAAJ,EAAW;AACPI,MAAAA,OAAO,GAAG;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,cAAc,EAAE,kEAFV;AAGNC,QAAAA,QAAQ,EAAE,IAHJ;AAINC,QAAAA,iBAAiB,EAAE;AAJb,OAAV;AAMH,KAPD,MAOO;AACHJ,MAAAA,OAAO,GAAG;AACNC,QAAAA,IAAI,EAAEV,QAAQ,CAACU,IADT;AAENC,QAAAA,cAAc,EAAE,MAAMX,QAAQ,CAACW,cAFzB;AAGNC,QAAAA,QAAQ,EAAE,IAHJ;AAINC,QAAAA,iBAAiB,EAAE;AAJb,OAAV;AAMH;;AAED,UAAMC,OAAO,GAAG,MAAMb,SAAS,CAACc,MAAV,CAAiBN,OAAjB,CAAtB;AAEA,QAAIO,IAAI,GAAG,MAAMF,OAAO,CAACG,OAAR,EAAjB,CAtBA,CAuBA;;AAEAD,IAAAA,IAAI,CAACE,EAAL,CAAQ,SAAR,EAAmBC,OAAO,IAAI;AAC1B,YAAMC,GAAG,GAAGD,OAAO,CAACC,GAAR,EAAZ;;AAEA,UAAGA,GAAG,CAACC,KAAJ,CAAU,iBAAV,CAAH,EAAiC;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,OAAR,EAAZ;AACH;AACJ,KAND;AAQA,UAAMR,IAAI,CAACS,IAAL,CAAU,yCAAV,CAAN;AAEA,UAAMT,IAAI,CAACU,KAAL,CAAW,gBAAX,CAAN;AACA,UAAMV,IAAI,CAACW,IAAL,CAAU,cAAV,EAA0B,4BAA1B,CAAN;AACA,UAAMX,IAAI,CAACW,IAAL,CAAU,cAAV,EAA0B,WAA1B,CAAN;AAEA,UAAMX,IAAI,CAACU,KAAL,CAAW,2BAAX,CAAN;AAEA,UAAMV,IAAI,CAACY,iBAAL,EAAN,CAzCA,CA2CA;;AAEA,UAAMC,UAAU,GAAG,MAAMb,IAAI,CAACc,QAAL,CAAc,MAAM;AACzC,aAAO;AACHC,QAAAA,KAAK,EAAEC,QAAQ,CAACC,eAAT,CAAyBC;AAD7B,OAAP;AAGH,KAJwB,CAAzB;AAMA9B,IAAAA,GAAG,CAAC+B,IAAJ,CAAS;AAAEN,MAAAA;AAAF,KAAT;AAEH,GArDD,CAqDE,OAAOO,KAAP,EAAc;AACZd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACAhC,IAAAA,GAAG,CAAC+B,IAAJ,CAASE,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAT;AACH;AAGJ","sourcesContent":["import chromium from 'chrome-aws-lambda';\r\nimport puppeteer from 'puppeteer-core';\r\n\r\nexport default async function handler(req, res) {\r\n    try {\r\n        const isDev = !process.env.AWS_REGION;\r\n        let options;\r\n\r\n        if (isDev) {\r\n            options = {\r\n                args: [],\r\n                executablePath: \"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\r\n                headless: true,\r\n                ignoreHTTPSErrors: true,\r\n            }\r\n        } else {\r\n            options = {\r\n                args: chromium.args,\r\n                executablePath: await chromium.executablePath,\r\n                headless: true,\r\n                ignoreHTTPSErrors: true,\r\n            }\r\n        }\r\n\r\n        const browser = await puppeteer.launch(options);\r\n        \r\n        let page = await browser.newPage();\r\n        // await page.setRequestInterception(true);\r\n\r\n        page.on('request', request => {\r\n            const url = request.url();\r\n\r\n            if(url.match('api/aluno/curso')) {\r\n                console.log(request.headers())\r\n            }\r\n        })\r\n\r\n        await page.goto('https://www.estrategiaconcursos.com.br/');\r\n\r\n        await page.click('.button-header');\r\n        await page.type('[name=email]', 'wargasteixeira@hotmail.com')\r\n        await page.type('[name=senha]', 'Wrgs2703!')\r\n\r\n        await page.click('.ui-control [type=submit]')\r\n        \r\n        await page.waitForNavigation();\r\n\r\n        // await page.screenshot({path: 'screen.png', type: 'png'})\r\n\r\n        const dimensions = await page.evaluate(() => {\r\n            return {\r\n                width: document.documentElement.clientWidth\r\n            }\r\n        })\r\n\r\n        res.send({ dimensions })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        res.send(JSON.stringify(error))\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}